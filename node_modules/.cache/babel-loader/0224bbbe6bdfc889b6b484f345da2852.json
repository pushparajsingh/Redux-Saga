{"ast":null,"code":"var _jsxFileName = \"/home/pushparajsigh/Desktop/Saga/myapp/src/components/login.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from \"react-hook-form\";\nimport { getdata } from '../actions/action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => {\n    dispatch(getdata(data));\n  };\n\n  return (\n    /*#__PURE__*/\n\n    /* \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */\n    _jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        defaultValue: \"test\",\n        ...register(\"email\", {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, this), \"\\xA0\\xA0\", errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        children: \"This email is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"password\", {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        children: \"This password is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 27\n      }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(Login, \"h803nG4XeTddS25Sw5zpNT9ipSU=\", false, function () {\n  return [useDispatch, useForm];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useDispatch","useSelector","useForm","getdata","Login","dispatch","register","handleSubmit","formState","errors","onSubmit","data","required","email","color","password"],"sources":["/home/pushparajsigh/Desktop/Saga/myapp/src/components/login.js"],"sourcesContent":["import React from 'react'\nimport { useDispatch,useSelector } from 'react-redux'\nimport { useForm } from \"react-hook-form\";\nimport { getdata } from '../actions/action';\n\nexport default function Login() {\n  const dispatch = useDispatch(); \n  const { register, handleSubmit, formState: { errors } } = useForm();\n  const onSubmit = data => {\n    dispatch(getdata(data));\n  }\n\n  return (\n    /* \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */\n    <form onSubmit={handleSubmit(onSubmit)}>\n      {/* register your input into the hook by invoking the \"register\" function */}\n      <input defaultValue=\"test\" {...register(\"email\", { required: true })} />&nbsp;&nbsp;\n      {errors.email && <span style={{color:\"red\"}}>This email is required</span>}\n      {/* include validation with required or other standard HTML validation rules */}\n      <input {...register(\"password\", { required: true })} />\n      {/* errors will return when field validation fails  */}\n      {errors.password && <span style={{color:\"red\"}}>This password is required</span>}&nbsp;&nbsp;\n      \n      <input type=\"submit\" />\n    </form>\n  );\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAqBC,WAArB,QAAwC,aAAxC;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,OAAT,QAAwB,mBAAxB;;AAEA,eAAe,SAASC,KAAT,GAAiB;EAAA;;EAC9B,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;EACA,MAAM;IAAEM,QAAF;IAAYC,YAAZ;IAA0BC,SAAS,EAAE;MAAEC;IAAF;EAArC,IAAoDP,OAAO,EAAjE;;EACA,MAAMQ,QAAQ,GAAGC,IAAI,IAAI;IACvBN,QAAQ,CAACF,OAAO,CAACQ,IAAD,CAAR,CAAR;EACD,CAFD;;EAIA;IAAA;;IACE;IACA;MAAM,QAAQ,EAAEJ,YAAY,CAACG,QAAD,CAA5B;MAAA,wBAEE;QAAO,YAAY,EAAC,MAApB;QAAA,GAA+BJ,QAAQ,CAAC,OAAD,EAAU;UAAEM,QAAQ,EAAE;QAAZ,CAAV;MAAvC;QAAA;QAAA;QAAA;MAAA,QAFF,cAGGH,MAAM,CAACI,KAAP,iBAAgB;QAAM,KAAK,EAAE;UAACC,KAAK,EAAC;QAAP,CAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHnB,eAKE,sBAAWR,QAAQ,CAAC,UAAD,EAAa;UAAEM,QAAQ,EAAE;QAAZ,CAAb;MAAnB;QAAA;QAAA;QAAA;MAAA,QALF,EAOGH,MAAM,CAACM,QAAP,iBAAmB;QAAM,KAAK,EAAE;UAACD,KAAK,EAAC;QAAP,CAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAPtB,2BASE;QAAO,IAAI,EAAC;MAAZ;QAAA;QAAA;QAAA;MAAA,QATF;IAAA;MAAA;MAAA;MAAA;IAAA;EAFF;AAcD;;GArBuBV,K;UACLJ,W,EACyCE,O;;;KAFpCE,K"},"metadata":{},"sourceType":"module"}