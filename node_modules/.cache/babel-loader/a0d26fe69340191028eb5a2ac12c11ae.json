{"ast":null,"code":"import { GET_LOGIN_FAILURE, GET_LOGIN_REQUESTED, GET_LOGIN_SUCCESS, GET_DATA_REQUESTED, GET_DATA_SUCCESS, GET_SHOW_POST_REQUESTED, GET_SHOW_POST_SUCCESS, GET_DELETE_REQUESTED } from \"../constants\";\nimport { call, put, takeEvery } from 'redux-saga/effects';\nimport { Apidata, Api, ApiPost, ApiDelete } from './Api';\n\nfunction* fetchUser(action) {\n  try {\n    const response = yield call(Api, action.payload);\n    localStorage.setItem('user-info', JSON.stringify(response.data));\n    localStorage.setItem('token', response.data.token);\n    localStorage.setItem('user_id', response.data.user.id);\n    yield put({\n      type: GET_LOGIN_SUCCESS,\n      user: response.data\n    });\n  } catch (e) {\n    yield put({\n      type: GET_LOGIN_FAILURE,\n      error: e.message\n    });\n  }\n}\n\nfunction* fetchData() {\n  try {\n    let token = localStorage.getItem('token');\n    const responce = yield call(Apidata, token);\n    yield put({\n      type: GET_DATA_SUCCESS,\n      user: responce.data\n    });\n  } catch (e) {}\n}\n\nfunction* fetchPost(data) {\n  try {\n    // console.log('saga data invoked',data);\n    let responce = yield call(ApiPost, data.payload);\n    yield put({\n      type: GET_SHOW_POST_SUCCESS,\n      user: responce.data\n    });\n  } catch (e) {}\n}\n\nfunction* fetchDelete(del) {\n  console.log('delete saga invoked', del.payload);\n\n  try {\n    yield call(ApiDelete, del);\n  } catch (e) {\n    console.log(e.message);\n  }\n}\n\nfunction* mySaga() {\n  yield takeEvery(GET_LOGIN_REQUESTED, fetchUser);\n  yield takeEvery(GET_DATA_REQUESTED, fetchData);\n  yield takeEvery(GET_SHOW_POST_REQUESTED, fetchPost);\n  yield takeEvery(GET_DELETE_REQUESTED, fetchDelete);\n}\n\nexport default mySaga;","map":{"version":3,"names":["GET_LOGIN_FAILURE","GET_LOGIN_REQUESTED","GET_LOGIN_SUCCESS","GET_DATA_REQUESTED","GET_DATA_SUCCESS","GET_SHOW_POST_REQUESTED","GET_SHOW_POST_SUCCESS","GET_DELETE_REQUESTED","call","put","takeEvery","Apidata","Api","ApiPost","ApiDelete","fetchUser","action","response","payload","localStorage","setItem","JSON","stringify","data","token","user","id","type","e","error","message","fetchData","getItem","responce","fetchPost","fetchDelete","del","console","log","mySaga"],"sources":["/home/pushparajsigh/Desktop/Saga/myapp/src/saga/saga.js"],"sourcesContent":["import {GET_LOGIN_FAILURE,GET_LOGIN_REQUESTED,GET_LOGIN_SUCCESS,GET_DATA_REQUESTED,GET_DATA_SUCCESS, GET_SHOW_POST_REQUESTED,GET_SHOW_POST_SUCCESS,GET_DELETE_REQUESTED} from \"../constants\";\nimport { call, put, takeEvery } from 'redux-saga/effects'\nimport {Apidata,Api,ApiPost,ApiDelete} from './Api'\n\nfunction* fetchUser(action)\n{\n  try {\n  const response = yield call(Api,action.payload);\n  localStorage.setItem('user-info',JSON.stringify(response.data));\n  localStorage.setItem('token',(response.data.token));\n  localStorage.setItem('user_id',(response.data.user.id));\n\n  yield put({type:GET_LOGIN_SUCCESS, user:response.data }) \n  }\n  \n  catch(e)\n  {\n yield put ({ type:GET_LOGIN_FAILURE,error:e.message});\n  }\n}\n\nfunction* fetchData()\n{\n  try\n  {\n   let token = localStorage.getItem('token');\n    const responce = yield call(Apidata,token);\n    yield put({type:GET_DATA_SUCCESS, user:responce.data }) \n  }\n  catch(e)\n  {\n    \n  }\n}\n\nfunction* fetchPost(data)\n{\n  try {\n  // console.log('saga data invoked',data);\n  let responce = yield call(ApiPost,data.payload);\n  yield put({type:GET_SHOW_POST_SUCCESS,user:responce.data})\n  }\n\n  catch(e){\n\n  }\n}\n\nfunction* fetchDelete(del)\n{\n  console.log('delete saga invoked',del.payload);\n  try{\n  yield call(ApiDelete,del)\n  }\n  catch(e){\n   console.log(e.message);\n  }\n}\n\nfunction* mySaga() {\n \n  yield takeEvery(GET_LOGIN_REQUESTED, fetchUser);\n  yield takeEvery(GET_DATA_REQUESTED,fetchData);\n  yield takeEvery(GET_SHOW_POST_REQUESTED,fetchPost)\n  yield takeEvery(GET_DELETE_REQUESTED,fetchDelete)\n}\n\n\nexport default mySaga"],"mappings":"AAAA,SAAQA,iBAAR,EAA0BC,mBAA1B,EAA8CC,iBAA9C,EAAgEC,kBAAhE,EAAmFC,gBAAnF,EAAqGC,uBAArG,EAA6HC,qBAA7H,EAAmJC,oBAAnJ,QAA8K,cAA9K;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC;AACA,SAAQC,OAAR,EAAgBC,GAAhB,EAAoBC,OAApB,EAA4BC,SAA5B,QAA4C,OAA5C;;AAEA,UAAUC,SAAV,CAAoBC,MAApB,EACA;EACE,IAAI;IACJ,MAAMC,QAAQ,GAAG,MAAMT,IAAI,CAACI,GAAD,EAAKI,MAAM,CAACE,OAAZ,CAA3B;IACAC,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeL,QAAQ,CAACM,IAAxB,CAAjC;IACAJ,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,QAAQ,CAACM,IAAT,CAAcC,KAA5C;IACAL,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCH,QAAQ,CAACM,IAAT,CAAcE,IAAd,CAAmBC,EAAnD;IAEA,MAAMjB,GAAG,CAAC;MAACkB,IAAI,EAACzB,iBAAN;MAAyBuB,IAAI,EAACR,QAAQ,CAACM;IAAvC,CAAD,CAAT;EACC,CAPD,CASA,OAAMK,CAAN,EACA;IACD,MAAMnB,GAAG,CAAE;MAAEkB,IAAI,EAAC3B,iBAAP;MAAyB6B,KAAK,EAACD,CAAC,CAACE;IAAjC,CAAF,CAAT;EACE;AACF;;AAED,UAAUC,SAAV,GACA;EACE,IACA;IACC,IAAIP,KAAK,GAAGL,YAAY,CAACa,OAAb,CAAqB,OAArB,CAAZ;IACC,MAAMC,QAAQ,GAAG,MAAMzB,IAAI,CAACG,OAAD,EAASa,KAAT,CAA3B;IACA,MAAMf,GAAG,CAAC;MAACkB,IAAI,EAACvB,gBAAN;MAAwBqB,IAAI,EAACQ,QAAQ,CAACV;IAAtC,CAAD,CAAT;EACD,CALD,CAMA,OAAMK,CAAN,EACA,CAEC;AACF;;AAED,UAAUM,SAAV,CAAoBX,IAApB,EACA;EACE,IAAI;IACJ;IACA,IAAIU,QAAQ,GAAG,MAAMzB,IAAI,CAACK,OAAD,EAASU,IAAI,CAACL,OAAd,CAAzB;IACA,MAAMT,GAAG,CAAC;MAACkB,IAAI,EAACrB,qBAAN;MAA4BmB,IAAI,EAACQ,QAAQ,CAACV;IAA1C,CAAD,CAAT;EACC,CAJD,CAMA,OAAMK,CAAN,EAAQ,CAEP;AACF;;AAED,UAAUO,WAAV,CAAsBC,GAAtB,EACA;EACEC,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkCF,GAAG,CAAClB,OAAtC;;EACA,IAAG;IACH,MAAMV,IAAI,CAACM,SAAD,EAAWsB,GAAX,CAAV;EACC,CAFD,CAGA,OAAMR,CAAN,EAAQ;IACPS,OAAO,CAACC,GAAR,CAAYV,CAAC,CAACE,OAAd;EACA;AACF;;AAED,UAAUS,MAAV,GAAmB;EAEjB,MAAM7B,SAAS,CAACT,mBAAD,EAAsBc,SAAtB,CAAf;EACA,MAAML,SAAS,CAACP,kBAAD,EAAoB4B,SAApB,CAAf;EACA,MAAMrB,SAAS,CAACL,uBAAD,EAAyB6B,SAAzB,CAAf;EACA,MAAMxB,SAAS,CAACH,oBAAD,EAAsB4B,WAAtB,CAAf;AACD;;AAGD,eAAeI,MAAf"},"metadata":{},"sourceType":"module"}