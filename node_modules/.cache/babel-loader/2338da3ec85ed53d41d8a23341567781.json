{"ast":null,"code":"import { GET_LOGIN_FAILURE, GET_LOGIN_REQUESTED, GET_LOGIN_SUCCESS } from \"../constants\";\nimport { call, put, takeEvery } from 'redux-saga/effects';\nimport axios from \"axios\";\n\nfunction Api(data) {\n  console.log(555, data);\n  const body = {\n    \"user\": {\n      \"email\": data.email,\n      \"password\": data.password\n    }\n  };\n  return axios.request({\n    method: 'post',\n    url: 'https://react-rails-api-demo.herokuapp.com/api/v1/signin',\n    data: body\n  });\n}\n\n_c = Api;\n\nfunction* fetchUser(action) {\n  try {\n    const response = yield call(Api, action.payload);\n    console.log(response.data);\n    localStorage.setItem('user-info', JSON.stringify(response.data));\n    yield put({\n      type: GET_LOGIN_SUCCESS,\n      user: response.data\n    });\n  } catch (e) {\n    yield put({\n      type: GET_LOGIN_FAILURE,\n      error: e.message\n    });\n  }\n}\n\nfunction* mySaga() {\n  yield takeEvery(GET_LOGIN_REQUESTED, fetchUser);\n}\n\nexport default mySaga;\n\nvar _c;\n\n$RefreshReg$(_c, \"Api\");","map":{"version":3,"names":["GET_LOGIN_FAILURE","GET_LOGIN_REQUESTED","GET_LOGIN_SUCCESS","call","put","takeEvery","axios","Api","data","console","log","body","email","password","request","method","url","fetchUser","action","response","payload","localStorage","setItem","JSON","stringify","type","user","e","error","message","mySaga"],"sources":["/home/pushparajsigh/Desktop/Saga/myapp/src/saga/saga.js"],"sourcesContent":["import {GET_LOGIN_FAILURE,GET_LOGIN_REQUESTED,GET_LOGIN_SUCCESS} from \"../constants\";\nimport { call, put, takeEvery } from 'redux-saga/effects'\nimport axios from \"axios\";\n\nfunction Api(data) {\n\tconsole.log(555, data)\n    const body = {\n      \"user\": {\n        \"email\": data.email,\n        \"password\":  data.password\n      }\n    }\n    return axios.request({\n\t    method: 'post',\n\t    url: 'https://react-rails-api-demo.herokuapp.com/api/v1/signin',\n\t    data: body\n  \t});\n}\nfunction* fetchUser(action)\n{\n  try {\n  const response = yield call(Api,action.payload);\n  console.log(response.data)\n  localStorage.setItem('user-info',JSON.stringify(response.data));\n  yield put({type:GET_LOGIN_SUCCESS, user:response.data }) \n  }\n  \n  catch(e)\n  {\n yield put ({ type:GET_LOGIN_FAILURE,error:e.message});\n  }\n}\n\nfunction* mySaga() {\n  yield takeEvery(GET_LOGIN_REQUESTED, fetchUser);\n}\n\n\nexport default mySaga"],"mappings":"AAAA,SAAQA,iBAAR,EAA0BC,mBAA1B,EAA8CC,iBAA9C,QAAsE,cAAtE;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,GAAT,CAAaC,IAAb,EAAmB;EAClBC,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBF,IAAjB;EACG,MAAMG,IAAI,GAAG;IACX,QAAQ;MACN,SAASH,IAAI,CAACI,KADR;MAEN,YAAaJ,IAAI,CAACK;IAFZ;EADG,CAAb;EAMA,OAAOP,KAAK,CAACQ,OAAN,CAAc;IACpBC,MAAM,EAAE,MADY;IAEpBC,GAAG,EAAE,0DAFe;IAGpBR,IAAI,EAAEG;EAHc,CAAd,CAAP;AAKH;;KAbQJ,G;;AAcT,UAAUU,SAAV,CAAoBC,MAApB,EACA;EACE,IAAI;IACJ,MAAMC,QAAQ,GAAG,MAAMhB,IAAI,CAACI,GAAD,EAAKW,MAAM,CAACE,OAAZ,CAA3B;IACAX,OAAO,CAACC,GAAR,CAAYS,QAAQ,CAACX,IAArB;IACAa,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeL,QAAQ,CAACX,IAAxB,CAAjC;IACA,MAAMJ,GAAG,CAAC;MAACqB,IAAI,EAACvB,iBAAN;MAAyBwB,IAAI,EAACP,QAAQ,CAACX;IAAvC,CAAD,CAAT;EACC,CALD,CAOA,OAAMmB,CAAN,EACA;IACD,MAAMvB,GAAG,CAAE;MAAEqB,IAAI,EAACzB,iBAAP;MAAyB4B,KAAK,EAACD,CAAC,CAACE;IAAjC,CAAF,CAAT;EACE;AACF;;AAED,UAAUC,MAAV,GAAmB;EACjB,MAAMzB,SAAS,CAACJ,mBAAD,EAAsBgB,SAAtB,CAAf;AACD;;AAGD,eAAea,MAAf"},"metadata":{},"sourceType":"module"}