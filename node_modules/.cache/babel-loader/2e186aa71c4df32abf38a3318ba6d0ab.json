{"ast":null,"code":"import { legacy_createStore, applyMiddleware, compose } from 'redux';\nimport { createSagaMiddleware } from 'redux-saga';\nimport rootReducer from '../reducers/rootReducer';\nimport mySaga from '../saga/rootsaga'; // create the saga middleware\n\nconst sagaMiddleware = createSagaMiddleware();\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // mount it on the Store\n\nconst store = legacy_createStore(rootReducer, composeEnhancers(applyMiddleware(sagaMiddleware))); // then run the saga\n\nsagaMiddleware.run(mySaga);\nexport default store; // render the application","map":{"version":3,"names":["legacy_createStore","applyMiddleware","compose","createSagaMiddleware","rootReducer","mySaga","sagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","run"],"sources":["/home/pushparajsigh/Desktop/Saga/myapp/src/store/store.js"],"sourcesContent":["import { legacy_createStore, applyMiddleware,compose } from 'redux'\nimport { createSagaMiddleware } from 'redux-saga'\n\nimport rootReducer from '../reducers/rootReducer'\nimport mySaga from '../saga/rootsaga'\n\n// create the saga middleware\nconst sagaMiddleware = createSagaMiddleware()\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n// mount it on the Store\nconst store = legacy_createStore(rootReducer,composeEnhancers(applyMiddleware(sagaMiddleware)))\n\n// then run the saga\nsagaMiddleware.run(mySaga);\nexport default store;\n// render the application"],"mappings":"AAAA,SAASA,kBAAT,EAA6BC,eAA7B,EAA6CC,OAA7C,QAA4D,OAA5D;AACA,SAASC,oBAAT,QAAqC,YAArC;AAEA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,MAAP,MAAmB,kBAAnB,C,CAEA;;AACA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C;AACA,MAAMI,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CP,OAAxE,C,CACA;;AACA,MAAMQ,KAAK,GAAGV,kBAAkB,CAACI,WAAD,EAAaG,gBAAgB,CAACN,eAAe,CAACK,cAAD,CAAhB,CAA7B,CAAhC,C,CAEA;;AACAA,cAAc,CAACK,GAAf,CAAmBN,MAAnB;AACA,eAAeK,KAAf,C,CACA"},"metadata":{},"sourceType":"module"}