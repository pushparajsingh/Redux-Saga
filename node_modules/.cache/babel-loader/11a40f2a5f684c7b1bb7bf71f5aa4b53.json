{"ast":null,"code":"import { GET_LOGIN_SUCCESS, GET_LOGIN_FAILURE } from \"../constants\";\nconst initialState = {\n  user: []\n};\n\nconst LoginReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_LOGIN_SUCCESS:\n      return { ...state,\n        user: action.payload\n      };\n\n    case GET_LOGIN_FAILURE:\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = LoginReducer;\nexport default LoginReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginReducer\");","map":{"version":3,"names":["GET_LOGIN_SUCCESS","GET_LOGIN_FAILURE","initialState","user","LoginReducer","state","action","type","payload"],"sources":["/home/pushparajsigh/Desktop/Saga/myapp/src/reducers/reducer.js"],"sourcesContent":["import { GET_LOGIN_SUCCESS,GET_LOGIN_FAILURE } from \"../constants\"\nconst initialState = {\n    user:[]\n}\n\nconst LoginReducer = (state=initialState,action) => {\n\n    switch(action.type){\n        case GET_LOGIN_SUCCESS:\n            return ({\n                ...state,\n                user:action.payload\n            })\n\n        case GET_LOGIN_FAILURE:\n            return ({\n                ...state,\n            })\n        default :\n        return state\n    }\n}\nexport default LoginReducer;"],"mappings":"AAAA,SAASA,iBAAT,EAA2BC,iBAA3B,QAAoD,cAApD;AACA,MAAMC,YAAY,GAAG;EACjBC,IAAI,EAAC;AADY,CAArB;;AAIA,MAAMC,YAAY,GAAG,YAA+B;EAAA,IAA9BC,KAA8B,uEAAxBH,YAAwB;EAAA,IAAXI,MAAW;;EAEhD,QAAOA,MAAM,CAACC,IAAd;IACI,KAAKP,iBAAL;MACI,OAAQ,EACJ,GAAGK,KADC;QAEJF,IAAI,EAACG,MAAM,CAACE;MAFR,CAAR;;IAKJ,KAAKP,iBAAL;MACI,OAAQ,EACJ,GAAGI;MADC,CAAR;;IAGJ;MACA,OAAOA,KAAP;EAZJ;AAcH,CAhBD;;KAAMD,Y;AAiBN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}