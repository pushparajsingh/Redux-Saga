{"ast":null,"code":"import { GET_LOGIN_FAILURE, GET_LOGIN_REQUESTED, GET_LOGIN_SUCCESS, GET_DATA_REQUESTED } from \"../constants\";\nimport { call, put, takeEvery } from 'redux-saga/effects';\nimport { Apidata, Api } from './Api';\n\nfunction* fetchUser(action) {\n  try {\n    const response = yield call(Api, action.payload);\n    console.log(response.data);\n    localStorage.setItem('user-info', JSON.stringify(response.data));\n    localStorage.setItem('token', response.data.token);\n    yield put({\n      type: GET_LOGIN_SUCCESS,\n      user: response.data\n    });\n  } catch (e) {\n    yield put({\n      type: GET_LOGIN_FAILURE,\n      error: e.message\n    });\n  }\n}\n\nfunction* fetchData() {\n  try {\n    const token = localStorage.getItem('token');\n    const responce = yield call(Apidata, token);\n    console.log('responce', responce);\n  } catch (e) {}\n}\n\nfunction* mySaga() {\n  yield takeEvery(GET_LOGIN_REQUESTED, fetchUser);\n  yield takeEvery(GET_DATA_REQUESTED, fetchData);\n}\n\nexport default mySaga;","map":{"version":3,"names":["GET_LOGIN_FAILURE","GET_LOGIN_REQUESTED","GET_LOGIN_SUCCESS","GET_DATA_REQUESTED","call","put","takeEvery","Apidata","Api","fetchUser","action","response","payload","console","log","data","localStorage","setItem","JSON","stringify","token","type","user","e","error","message","fetchData","getItem","responce","mySaga"],"sources":["/home/pushparajsigh/Desktop/Saga/myapp/src/saga/saga.js"],"sourcesContent":["import {GET_LOGIN_FAILURE,GET_LOGIN_REQUESTED,GET_LOGIN_SUCCESS,GET_DATA_REQUESTED} from \"../constants\";\nimport { call, put, takeEvery } from 'redux-saga/effects'\nimport {Apidata,Api} from './Api'\n\nfunction* fetchUser(action)\n{\n  try {\n  const response = yield call(Api,action.payload);\n console.log(response.data)\n  localStorage.setItem('user-info',JSON.stringify(response.data));\n  localStorage.setItem('token',(response.data.token));\n\n  yield put({type:GET_LOGIN_SUCCESS, user:response.data }) \n  }\n  \n  catch(e)\n  {\n yield put ({ type:GET_LOGIN_FAILURE,error:e.message});\n  }\n}\n\nfunction* fetchData()\n{\n  try\n  {\n    const token = localStorage.getItem('token');\n    const responce = yield call(Apidata,token);\n    console.log('responce',responce);\n  }\n  catch(e)\n  {\n    \n  }\n}\n\nfunction* mySaga() {\n \n  yield takeEvery(GET_LOGIN_REQUESTED, fetchUser);\n  yield takeEvery(GET_DATA_REQUESTED,fetchData);\n}\n\n\nexport default mySaga"],"mappings":"AAAA,SAAQA,iBAAR,EAA0BC,mBAA1B,EAA8CC,iBAA9C,EAAgEC,kBAAhE,QAAyF,cAAzF;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC;AACA,SAAQC,OAAR,EAAgBC,GAAhB,QAA0B,OAA1B;;AAEA,UAAUC,SAAV,CAAoBC,MAApB,EACA;EACE,IAAI;IACJ,MAAMC,QAAQ,GAAG,MAAMP,IAAI,CAACI,GAAD,EAAKE,MAAM,CAACE,OAAZ,CAA3B;IACDC,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAArB;IACCC,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeR,QAAQ,CAACI,IAAxB,CAAjC;IACAC,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BN,QAAQ,CAACI,IAAT,CAAcK,KAA5C;IAEA,MAAMf,GAAG,CAAC;MAACgB,IAAI,EAACnB,iBAAN;MAAyBoB,IAAI,EAACX,QAAQ,CAACI;IAAvC,CAAD,CAAT;EACC,CAPD,CASA,OAAMQ,CAAN,EACA;IACD,MAAMlB,GAAG,CAAE;MAAEgB,IAAI,EAACrB,iBAAP;MAAyBwB,KAAK,EAACD,CAAC,CAACE;IAAjC,CAAF,CAAT;EACE;AACF;;AAED,UAAUC,SAAV,GACA;EACE,IACA;IACE,MAAMN,KAAK,GAAGJ,YAAY,CAACW,OAAb,CAAqB,OAArB,CAAd;IACA,MAAMC,QAAQ,GAAG,MAAMxB,IAAI,CAACG,OAAD,EAASa,KAAT,CAA3B;IACAP,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBc,QAAvB;EACD,CALD,CAMA,OAAML,CAAN,EACA,CAEC;AACF;;AAED,UAAUM,MAAV,GAAmB;EAEjB,MAAMvB,SAAS,CAACL,mBAAD,EAAsBQ,SAAtB,CAAf;EACA,MAAMH,SAAS,CAACH,kBAAD,EAAoBuB,SAApB,CAAf;AACD;;AAGD,eAAeG,MAAf"},"metadata":{},"sourceType":"module"}